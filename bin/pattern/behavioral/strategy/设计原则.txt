1.找出应用中可能需要变化之处，把他们独立出来，不要和那些不需要变化的代码混在一起。
（鸭子的行为会因为鸭子种类的不同而发生变化，因此鸭子的行为被抽离出来，可以随时添加新的行为而不影响原来的行为）
2.针对接口编程，而不是针对实现编程。
（对于鸭子可以拥有的行为接口，分别编写对应的一个或多个实现类）
3.多用组合，少用继承。
（不同的鸭子类包含不同的行为，并且可以在运行时改变，例如火箭动力的模型鸭子）